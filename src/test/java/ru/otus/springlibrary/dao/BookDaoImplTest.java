package ru.otus.springlibrary.dao;

import org.junit.Ignore;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import ru.otus.springlibrary.BasicTest;
import ru.otus.springlibrary.domain.Author;
import ru.otus.springlibrary.domain.Book;
import ru.otus.springlibrary.domain.Genre;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

class BookDaoImplTest extends BasicTest {

    private static final String TEST_BOOK_TITLE = "test book title";

    @Autowired
    BookDaoImpl bookDao;

    @MockBean
    AuthorDaoImpl authorDao;

    @MockBean
    GenreDaoImpl genreDao;

    private Book book;

    private Author author;

    private Genre genre;

    @BeforeEach
    void setUp() {
        author = mock(Author.class);
        genre = mock(Genre.class);

        when(author.getId()).thenReturn(1);
        when(authorDao.findById(1)).thenReturn(author);

        when(genre.getId()).thenReturn(1);
        when(genreDao.findById(1)).thenReturn(genre);

        book = new Book(TEST_BOOK_TITLE, author, genre);
    }

//    @Test
//    void insert() {
//        Book bookFromDB = bookDao.insert(book);
//
//        checkAutoGeneratedId(bookFromDB.getId());
//        assertEquals(TEST_BOOK_TITLE, book.getTitle());
//        assertEquals(author, book.getAuthor());
//        assertEquals(genre, book.getGenre());
//    }

    @Test
    void findById() {
        int id = 1;
        Book book = bookDao.findById(id);

        assertEquals(id, book.getId());
        assertEquals("test db title", book.getTitle());
    }
}